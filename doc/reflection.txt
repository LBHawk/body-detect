1) Description of our addition:
	For our detection we used the default HOG people detection in openCV. We decided to use this method because we thought that full body detection would work better in a practical setting than face detection. This method also had substantial documentation, which would be helpful in our implementation.

2) Analysis of experiments, trend, assumptions, what worked and what didn't
For our expirement we surveyed commmon area/ hallway in Alden hall from around 6 PM to 7PM. Our camera had a full view of the hallway and door facing north main street during this time. A general trend that we saw in our expirement was that our detection algorithm would successfully pick up people moving in the hallway at a medium distance. In general this was the area outside of lab 109, and the waiting area with the tables. There were some problems when there were people up closer to the camera; between 2-4 feet from it. What would happen in this range is that it would often recognize the lower part of someones body as a whole person. This led to a couple cases where the bounding box was drawn only around the persons legs. In addition, when there are multiple people in the frame, it does not always detect both people. More often than not it will only detect the person closest to the camera. It could successfully detect multiple people in the same frame if they were far enough apart from each other. For our expirements we spent a good amount of time working on fine tuning our parameters to the HOG function. Specifically, we worked on balancing the time tradeoff of the windstride parameter. A higher windstride meant faster execution time, but overall significantly less detection capability. We tried values of 64, 32, 16, 8, and 4. We found that while 64, 32, and 16 ran moderately fast, they were completely unable to detect any meaningful movement. A windstride of 4 had such a long startup time that the process often froze before it started. Ultimately we found that a windstride of 8 was a good balance. Lastly, we also decided to get rid of the live preview of the camera when testing, as we found that it was responsible for many of the hangups we had in our testing.

3) Bayesian stuff

4) Hardware problems
Our process had minimal hardware problems. In the beginning we had difficulty setting up openCV on the raspberry pi. This was due to an error when creating the make file. After resolving that error, we were successfully able to create the make file by running the Pi overnight. Once we had OpenCV we had a quick problem where we forgot to download some dependencies, and later on had a similar problem. Overall most of our roadblocks in this lab were due to software problems, rather than hardware problems. 
